#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf

# By default th current dir is the dir of the script, so go up one level
wrapper.working.dir=../

wrapper.java.pidfile=Temp/java_osmb.pid

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
wrapper.java.command=java
#wrapper.java.command=/usr/lib/jvm/java-8-oracle/jre/bin/java
#wrapper.java.command=/usr/lib/jvm/java-9-oracle/bin/java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
#wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=lib/wrapper.jar
#wrapper.java.classpath.1=/usr/share/java/wrapper.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-server
wrapper.java.additional.2=-Djava.awt.headless=true
#wrapper.java.additional.3=-Dcom.sun.management.jmxremote
#wrapper.java.additional.4=-Dcom.sun.management.jmxremote.port=50893
#wrapper.java.additional.5=-Dcom.sun.management.jmxremote.authenticate=false
#wrapper.java.additional.6=-Dcom.sun.management.jmxremote.ssl=false
#wrapper.java.additional.7=-Djava.rmi.server.hostname=localhost
#wrapper.java.additional.8=-Djava.rmi.server.useLocalHostname=true


# Initial Java Heap Size (in MB)
wrapper.java.initmemory=64

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=512

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=Osmb.jar
wrapper.app.parameter.4=-config
wrapper.app.parameter.5=etc/osmb.properties


#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
#wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=Logs/osmb.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM
#wrapper.logfile.format=PM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=2m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=60
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
#  Ignore -verbose:class output to avoid false positives.
#wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
#wrapper.filter.action.1000=NONE
# (Simple match)
#wrapper.filter.trigger.1001=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
##wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
##wrapper.filter.allow_wildcards.1001=TRUE
#wrapper.filter.action.1001=RESTART
#wrapper.filter.message.1001=The JVM has run out of memory.

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=OSMB

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=OSMB

# Display name of the service
wrapper.ntservice.displayname=OSMB

# Description of the service
wrapper.ntservice.description=OSMB

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

wrapper.on_exit.default=RESTART
wrapper.on_exit.1=SHUTDOWN
wrapper.restart.delay=15
#wrapper.debug=true
#wrapper.jvm_cleanup.timeout=30
wrapper.jvm_exit.timeout=30
wrapper.restart.reload_configuration=TRUE
